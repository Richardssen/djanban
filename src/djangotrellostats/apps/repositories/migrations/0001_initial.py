# -*- coding: utf-8 -*-
# Generated by Django 1.10 on 2016-09-07 18:36
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        ('boards', '0023_auto_20160904_1643'),
    ]

    operations = [
        migrations.CreateModel(
            name='Commit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('commit', models.CharField(max_length=64, verbose_name='Commit repository')),
                ('comments', models.TextField(blank=True, default='', verbose_name='Comments about this commit')),
                ('creation_datetime', models.DateTimeField(verbose_name='Datetime of this commit')),
                ('code', models.FileField(upload_to=b'', verbose_name='Code for this commit')),
                ('board', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='commits', to='boards.Board', verbose_name='Project this commit depends on')),
            ],
        ),
        migrations.CreateModel(
            name='PyLintMessage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('path', models.CharField(max_length=256, verbose_name='File where the message')),
                ('type', models.CharField(max_length=256, verbose_name='Message type')),
                ('message', models.TextField(verbose_name='Message content')),
                ('message_symbolic_name', models.CharField(blank=True, default='', max_length=64, verbose_name='Message content')),
                ('line', models.IntegerField(verbose_name='Line where the error happens')),
                ('column', models.IntegerField(verbose_name='Column where the error happens')),
                ('object', models.CharField(max_length=256, verbose_name='Object')),
                ('board', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pylint_messages', to='boards.Board', verbose_name='Project this linting message depends on')),
                ('commit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pylint_messages', to='repositories.Commit', verbose_name='Commit this linting message depends on')),
            ],
            options={
                'verbose_name': 'pylint message',
                'verbose_name_plural': 'pylint messages',
            },
        ),
        migrations.CreateModel(
            name='Repository',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, verbose_name='Name of this repository')),
                ('description', models.TextField(blank=True, default='', verbose_name='Description for this repository')),
                ('url', models.URLField(verbose_name='Repository URL')),
            ],
            options={
                'verbose_name': 'Repository',
                'verbose_name_plural': 'Repositories',
            },
        ),
        migrations.CreateModel(
            name='GitLabRepository',
            fields=[
                ('repository_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='repositories.Repository')),
                ('access_token', models.CharField(max_length=128, verbose_name='Access token for the repository')),
                ('project_name', models.CharField(max_length=128, verbose_name='Project userspace/name')),
            ],
            options={
                'verbose_name': 'GitLab repository',
                'verbose_name_plural': 'GitLab repositories',
            },
            bases=('repositories.repository',),
        ),
        migrations.AddField(
            model_name='repository',
            name='board',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='repositories', to='boards.Board', verbose_name='Project this repository depends on'),
        ),
        migrations.AddField(
            model_name='repository',
            name='type',
            field=models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.ContentType'),
        ),
        migrations.AddField(
            model_name='pylintmessage',
            name='repository',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pylint_messages', to='repositories.Repository', verbose_name='Repository this linting message depends on'),
        ),
        migrations.AddField(
            model_name='commit',
            name='repository',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='commits', to='repositories.Repository', verbose_name='Repository this commit depends on'),
        ),
        migrations.AlterIndexTogether(
            name='pylintmessage',
            index_together=set([('board', 'commit', 'type'), ('board', 'type'), ('commit', 'type')]),
        ),
    ]
