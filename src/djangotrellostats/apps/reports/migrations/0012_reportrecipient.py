# -*- coding: utf-8 -*-
# Generated by Django 1.10 on 2017-03-25 15:45
from __future__ import unicode_literals

from django.conf import settings
from django.core.exceptions import ObjectDoesNotExist
from django.db import migrations, models


def create_default_report_recipients(apps, schema):
    Group = apps.get_model("auth", "Group")
    ReportRecipient = apps.get_model("reports", "ReportRecipient")
    Board = apps.get_model("boards", "Board")
    try:
        administrator_group = Group.objects.get(name=settings.ADMINISTRATOR_GROUP)
        administrator_users = administrator_group.user_set.filter(email__isnull=False)
        for administrator_user in administrator_users:
            if not ReportRecipient.objects.filter(email=administrator_user.email).exists():
                report_recipient = ReportRecipient(email=administrator_user.email, active=True)
                report_recipient.save()
                for board in Board.objects.all():
                    report_recipient.boards.add(board)
    except ObjectDoesNotExist:
        pass


class Migration(migrations.Migration):

    dependencies = [
        ('auth', '__latest__'),
        ('boards', '0061_auto_20170321_0236'),
        ('reports', '0011_auto_20170211_1640'),
    ]

    operations = [
        migrations.CreateModel(
            name='ReportRecipient',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Email of the recipient')),
                ('active', models.BooleanField(default=True, help_text='Only active report recipients will be notified', verbose_name='Is active?')),
                ('boards', models.ManyToManyField(related_name='report_recipients', to='boards.Board', verbose_name='Boards')),
            ],
        ),
        migrations.RunPython(create_default_report_recipients)
    ]
